{"version":3,"sources":["components/GoodsList/GoodsList.jsx","components/Button/Button.jsx","App.js","index.js"],"names":["GoodsList","React","memo","goods","className","map","good","propTypes","PropTypes","arrayOf","string","defaultProps","Button","label","clickHandler","type","onClick","goodsFromServer","App","state","showGoods","reversed","sortBy","minLength","showGoodsList","setState","sort","reverse","reset","handleChange","e","target","name","value","this","filteredGoods","filter","length","good1","good2","localeCompare","onChange","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGaA,EAAYC,IAAMC,MAAK,gBAAGC,EAAH,EAAGA,MAAH,OAClC,oBAAIC,UAAU,YAAd,SAEID,EAAME,KAAI,SAAAC,GAAI,OACZ,6BACGA,GADMA,WAQjBN,EAAUO,UAAY,CACpBJ,MAAOK,IAAUC,QAAQD,IAAUE,SAGrCV,EAAUW,aAAe,CACvBR,MAAO,ICjBF,IAAMS,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAV,OACpB,wBACEC,KAAK,SACLC,QAASF,EAFX,SAIID,KASND,EAAOD,aAAe,CACpBE,MAAO,ICbT,IAAMI,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8HaC,E,4MA1HbC,MAAQ,CACNC,WAAW,EACXjB,MAAOc,EACPI,UAAU,EACVC,OAAQ,KACRC,UAAW,G,EAGbC,cAAgB,WACd,EAAKC,SAAS,CACZL,WAAW,K,EAIfM,KAAO,SAACJ,GACN,EAAKG,SAAS,CACZH,SACAD,UAAU,K,EAIdM,QAAU,WACR,EAAKF,UAAS,SAAAN,GAAK,MAAK,CACtBE,UAAWF,EAAME,c,EAIrBO,MAAQ,WACN,EAAKH,SAAS,CACZH,OAAQ,KACRD,UAAU,EACVE,UAAW,K,EAIfM,aAAe,SAACC,GACd,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKR,SAAL,eACGO,EAAOC,K,4CAIZ,WAAU,IAAD,OACP,EAEIC,KAAKf,MADPC,EADF,EACEA,UAAWjB,EADb,EACaA,MAAOkB,EADpB,EACoBA,SAAUC,EAD9B,EAC8BA,OAAQC,EADtC,EACsCA,UAGhCY,EAAgBhC,EAAMiC,QAAO,SAAA9B,GAAI,OAAIA,EAAK+B,QAAUd,KAiB1D,OAfAY,EAAcT,MAAK,SAACY,EAAOC,GACzB,OAAQjB,GACN,IAAK,OACH,OAAOgB,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMD,OAASE,EAAMF,OAC9B,QACE,OAAO,MAIThB,GACFc,EAAcR,UAId,qBAAKvB,UAAU,MAAf,SAEIgB,EACE,qCACE,cAACpB,EAAD,CAAWG,MAAOgC,IAElB,cAAC,EAAD,CACEtB,MAAM,UACNC,aAAcoB,KAAKP,UAErB,cAAC,EAAD,CACEd,MAAM,sBACNC,aAAc,WACZ,EAAKY,KAAK,WAGd,cAAC,EAAD,CACEb,MAAM,iBACNC,aAAc,WACZ,EAAKY,KAAK,aAGd,cAAC,EAAD,CACEb,MAAM,QACNC,aAAcoB,KAAKN,QAGrB,yBACEI,KAAK,YACLC,MAAOV,EACPkB,SAAUP,KAAKL,aAHjB,UAKE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,sBAIJ,cAAC,EAAD,CACEpB,MAAM,aACNC,aAAcoB,KAAKV,sB,GAlHfvB,IAAMyC,WCdxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a0d587fc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = React.memo(({ goods }) => (\n  <ul className=\"GoodsList\">\n    {\n      goods.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))\n    }\n  </ul>\n));\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string),\n};\n\nGoodsList.defaultProps = {\n  goods: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ label, clickHandler }) => (\n  <button\n    type=\"button\"\n    onClick={clickHandler}\n  >\n    { label }\n  </button>\n);\n\nButton.propTypes = {\n  label: PropTypes.string,\n  clickHandler: PropTypes.func.isRequired,\n};\n\nButton.defaultProps = {\n  label: '',\n};\n","import React from 'react';\n\nimport { GoodsList } from './components/GoodsList';\nimport { Button } from './components/Button';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    showGoods: false,\n    goods: goodsFromServer,\n    reversed: false,\n    sortBy: null,\n    minLength: 1,\n  };\n\n  showGoodsList = () => {\n    this.setState({\n      showGoods: true,\n    });\n  };\n\n  sort = (sortBy) => {\n    this.setState({\n      sortBy,\n      reversed: false,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      reversed: !state.reversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: null,\n      reversed: false,\n      minLength: 1,\n    });\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const {\n      showGoods, goods, reversed, sortBy, minLength,\n    } = this.state;\n\n    const filteredGoods = goods.filter(good => good.length >= minLength);\n\n    filteredGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case 'name':\n          return good1.localeCompare(good2);\n        case 'length':\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (reversed) {\n      filteredGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        {\n          showGoods ? (\n            <>\n              <GoodsList goods={filteredGoods} />\n\n              <Button\n                label=\"Reverse\"\n                clickHandler={this.reverse}\n              />\n              <Button\n                label=\"Sort alphabetically\"\n                clickHandler={() => {\n                  this.sort('name');\n                }}\n              />\n              <Button\n                label=\"Sort by length\"\n                clickHandler={() => {\n                  this.sort('length');\n                }}\n              />\n              <Button\n                label=\"Reset\"\n                clickHandler={this.reset}\n              />\n\n              <select\n                name=\"minLength\"\n                value={minLength}\n                onChange={this.handleChange}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n              </select>\n            </>\n          ) : (\n            <Button\n              label=\"Show Goods\"\n              clickHandler={this.showGoodsList}\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}